generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER       @map("user")
  ADMIN      @map("admin")
  SUPERADMIN @map("super-admin")

  @@map("role")
}

model User {
  id         Int      @id @unique @default(autoincrement()) @map("user_id")
  name       String   @db.VarChar
  email      String   @unique @db.VarChar
  password   String
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  role       Role     @default(USER)
  orders     Order[]  @relation("customer")
  deliveries Order[]  @relation("shippingAgent")

  @@map("users")
}

enum OrderStatus {
  NEW        @map("new")
  SHIPPED    @map("shipped")
  PROCESSING @map("processing")
  CANCELLED  @map("cancelled")
  REJECTED   @map("rejected")
  DRAFT      @map("draft")

  @@map("order_status")
}

enum OrderPriority {
  STANDARD @map("standard")
  EXPRESS  @map("express")
  TOP      @map("top")

  @@map("order_priorities")
}

model Order {
  id              Int           @id @default(autoincrement()) @map("order_id")
  status          OrderStatus   @map("status")
  customerId      Int           @map("customer_id")
  shippingAgentId Int           @map("shipping_agent_id")
  priority        OrderPriority @map("priority")
  trackingCode    String?       @unique @map("tracking_code") @db.VarChar
  closed          Boolean       @default(false)
  createdAt       DateTime      @default(now()) @map("created_at")
  updatedAt       DateTime      @updatedAt @map("updated_at")

  customer      User @relation("customer", fields: [customerId], references: [id])
  shippingAgent User @relation("shippingAgent", fields: [shippingAgentId], references: [id])

  @@map("orders")
}
